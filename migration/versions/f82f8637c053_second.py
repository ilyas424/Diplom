"""second

Revision ID: f82f8637c053
Revises: 3e52fff48946
Create Date: 2023-02-01 12:14:01.362566

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f82f8637c053'
down_revision = '3e52fff48946'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments',
    sa.Column('comments_id', sa.Integer(), nullable=False),
    sa.Column('FComments_name', sa.String(length=350), nullable=True),
    sa.PrimaryKeyConstraint('comments_id'),
    sa.UniqueConstraint('FComments_name')
    )
    op.create_index(op.f('ix_comments_comments_id'), 'comments', ['comments_id'], unique=True)
    op.create_table('employees',
    sa.Column('employees_id', sa.Integer(), nullable=False),
    sa.Column('Full_name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('employees_id'),
    sa.UniqueConstraint('Full_name')
    )
    op.create_index(op.f('ix_employees_employees_id'), 'employees', ['employees_id'], unique=True)
    op.create_table('priority',
    sa.Column('priority_id', sa.Integer(), nullable=False),
    sa.Column('priority_name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('priority_id'),
    sa.UniqueConstraint('priority_name')
    )
    op.create_index(op.f('ix_priority_priority_id'), 'priority', ['priority_id'], unique=True)
    op.create_table('status',
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('status_name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('status_id'),
    sa.UniqueConstraint('status_name')
    )
    op.create_index(op.f('ix_status_status_id'), 'status', ['status_id'], unique=True)
    op.create_table('type',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.String(length=40), nullable=True),
    sa.PrimaryKeyConstraint('type_id'),
    sa.UniqueConstraint('type_name')
    )
    op.create_index(op.f('ix_type_type_id'), 'type', ['type_id'], unique=True)
    op.add_column('ticket_posts', sa.Column('priority', sa.Integer(), nullable=True))
    op.add_column('ticket_posts', sa.Column('type', sa.Integer(), nullable=True))
    op.add_column('ticket_posts', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('ticket_posts', sa.Column('comments', sa.Integer(), nullable=True))
    op.add_column('ticket_posts', sa.Column('reporter', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'ticket_posts', 'type', ['type'], ['type_id'])
    op.create_foreign_key(None, 'ticket_posts', 'status', ['status'], ['status_id'])
    op.create_foreign_key(None, 'ticket_posts', 'comments', ['comments'], ['comments_id'])
    op.create_foreign_key(None, 'ticket_posts', 'priority', ['priority'], ['priority_id'])
    op.create_foreign_key(None, 'ticket_posts', 'employees', ['reporter'], ['employees_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'ticket_posts', type_='foreignkey')
    op.drop_constraint(None, 'ticket_posts', type_='foreignkey')
    op.drop_constraint(None, 'ticket_posts', type_='foreignkey')
    op.drop_constraint(None, 'ticket_posts', type_='foreignkey')
    op.drop_constraint(None, 'ticket_posts', type_='foreignkey')
    op.drop_column('ticket_posts', 'reporter')
    op.drop_column('ticket_posts', 'comments')
    op.drop_column('ticket_posts', 'status')
    op.drop_column('ticket_posts', 'type')
    op.drop_column('ticket_posts', 'priority')
    op.drop_index(op.f('ix_type_type_id'), table_name='type')
    op.drop_table('type')
    op.drop_index(op.f('ix_status_status_id'), table_name='status')
    op.drop_table('status')
    op.drop_index(op.f('ix_priority_priority_id'), table_name='priority')
    op.drop_table('priority')
    op.drop_index(op.f('ix_employees_employees_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_comments_comments_id'), table_name='comments')
    op.drop_table('comments')
    # ### end Alembic commands ###
