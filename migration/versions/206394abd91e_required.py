"""required

Revision ID: 206394abd91e
Revises: a43b9e5c4fab
Create Date: 2023-05-07 11:48:56.793159

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '206394abd91e'
down_revision = 'a43b9e5c4fab'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('boards', 'description',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('boards', 'is_open',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('boards', 'columns',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=64)),
               nullable=False)
    op.drop_constraint('boards_creator_email_fkey', 'boards', type_='foreignkey')
    op.create_foreign_key(None, 'boards', 'users', ['creator_email'], ['email'], ondelete='CASCADE')
    op.alter_column('ticket_comments', 'ticket_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ticket_comments', 'text',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    op.alter_column('ticket_comments', 'author_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.drop_constraint('ticket_comments_author_email_fkey', 'ticket_comments', type_='foreignkey')
    op.create_foreign_key(None, 'ticket_comments', 'users', ['author_email'], ['email'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'ticket_priorities', ['title'])
    op.create_unique_constraint(None, 'ticket_types', ['title'])
    op.alter_column('tickets', 'title',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.alter_column('tickets', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('tickets', 'priority',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('tickets', 'ttype',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('tickets', 'reporter_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('tickets', 'assignee_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.drop_constraint('tickets_reporter_email_fkey', 'tickets', type_='foreignkey')
    op.drop_constraint('tickets_assignee_email_fkey', 'tickets', type_='foreignkey')
    op.create_foreign_key(None, 'tickets', 'users', ['reporter_email'], ['email'], ondelete='CASCADE')
    op.create_foreign_key(None, 'tickets', 'users', ['assignee_email'], ['email'], ondelete='CASCADE')
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('users', 'hash',
               existing_type=sa.VARCHAR(length=256),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'hash',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.create_foreign_key('tickets_assignee_email_fkey', 'tickets', 'users', ['assignee_email'], ['email'])
    op.create_foreign_key('tickets_reporter_email_fkey', 'tickets', 'users', ['reporter_email'], ['email'])
    op.alter_column('tickets', 'assignee_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('tickets', 'reporter_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('tickets', 'ttype',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('tickets', 'priority',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('tickets', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('tickets', 'title',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.drop_constraint(None, 'ticket_types', type_='unique')
    op.drop_constraint(None, 'ticket_priorities', type_='unique')
    op.drop_constraint(None, 'ticket_comments', type_='foreignkey')
    op.create_foreign_key('ticket_comments_author_email_fkey', 'ticket_comments', 'users', ['author_email'], ['email'])
    op.alter_column('ticket_comments', 'author_email',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('ticket_comments', 'text',
               existing_type=sa.VARCHAR(length=256),
               nullable=True)
    op.alter_column('ticket_comments', 'ticket_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'boards', type_='foreignkey')
    op.create_foreign_key('boards_creator_email_fkey', 'boards', 'users', ['creator_email'], ['email'])
    op.alter_column('boards', 'columns',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=64)),
               nullable=True)
    op.alter_column('boards', 'is_open',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('boards', 'description',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    # ### end Alembic commands ###
